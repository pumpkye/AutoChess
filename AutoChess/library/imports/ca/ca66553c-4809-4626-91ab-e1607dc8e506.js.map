{"version":3,"sources":["../../../../../../assets/Script/AutoBattle/SkillEffect/assets/Script/AutoBattle/SkillEffect/CircleDamage.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AACpD,qDAAgE;AAChE,kDAA0D;AAC1D,0DAA2D;AAC3D,qDAAiD;AAEjD;;GAEG;AACH;IAAkC,gCAAe;IAC7C;eACI,iBAAO;IACX,CAAC;IAED,sBAAW,kCAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,YAAY,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAW,iCAAO;aAAlB;YACI,OAAO,cAAc,CAAC;QAC1B,CAAC;;;OAAA;IAED;;OAEG;IACI,2BAAI,GAAX,UAAY,IAAa;QACrB,iBAAM,IAAI,YAAC,IAAI,CAAC,CAAC;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,4BAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACjE,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,uCAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAChJ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,OAAO,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC5D,8BAAY,CAAC,iCAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,mBAAC;AAAD,CAjCA,AAiCC,CAjCiC,iCAAe,GAiChD;AAjCY,oCAAY","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum, DamageType } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { g_AutoBattleManager } from \"../AutoBattleManager\";\nimport { skillEffects } from \"./InitSkillEffect\";\n\n/**\n * 对[0]范围内[1]个目标造成[2]点魔法伤害\n */\nexport class CircleDamage extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n\n    public get effectId(): number {\n        return SkillEffectEnum.circleDamage;\n    }\n\n    public get effName(): string {\n        return \"circleDamage\";\n    }\n\n    /**\n     * play\n     */\n    public play(data: EffData): boolean {\n        super.play(data);\n        let skillEff = data.skillEff;\n        let range = skillEff.effArr[0];\n        let count = skillEff.effArr[1];\n        let damage = skillEff.effArr[2];\n\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.damage, [damage, DamageType.magic]);\n        let hitNpc = this.getRandomNpc(g_AutoBattleManager.getEnemyList(data.attacker), count, range, { x: data.defender.posX, y: data.defender.posY });\n        for (let i = 0; i < hitNpc.length; i++) {\n            const defender = hitNpc[i];\n            let effData = new EffData(effInfo, data.attacker, defender);\n            skillEffects[SkillEffectEnum.damage].play(effData);\n        }\n        return true;\n    }\n}"]}