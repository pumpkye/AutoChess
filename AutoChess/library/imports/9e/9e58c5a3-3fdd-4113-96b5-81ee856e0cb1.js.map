{"version":3,"sources":["../../../../../../assets/Script/AutoBattle/SkillEffect/assets/Script/AutoBattle/SkillEffect/Tear.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AACpD,qDAAgE;AAChE,kDAA0D;AAC1D,gDAA+C;AAC/C;;GAEG;AACH;IAA0B,wBAAe;IACrC;eACI,iBAAO;IACX,CAAC;IACD,sBAAW,0BAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,IAAI,CAAC;QAChC,CAAC;;;OAAA;IACD,sBAAW,yBAAO;aAAlB;YACI,OAAO,MAAM,CAAC;QAClB,CAAC;;;OAAA;IAEM,mBAAI,GAAX,UAAY,IAAa;QACrB,iBAAM,IAAI,YAAC,IAAI,CAAC,CAAC;QACjB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEvC,IAAI,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,4BAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,IAAI,GAAG,IAAI,qBAAS,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,WAAC;AAAD,CA1BA,AA0BC,CA1ByB,iCAAe,GA0BxC;AA1BY,oBAAI","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum, DamageType } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { ChessBuff } from \"../Model/ChessBuff\";\n/**\n * 撕裂，降低目标[0]点攻速，并造成每[1]秒[2]点伤害，持续[3]秒\n */\nexport class Tear extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n    public get effectId(): number {\n        return SkillEffectEnum.tear;\n    }\n    public get effName(): string {\n        return \"tear\";\n    }\n\n    public play(data: EffData): boolean {\n        super.play(data);\n        let attackSpeed = data.skillEff.effArr[0];\n        let deltaTime = data.skillEff.effArr[1];\n        let damage = data.skillEff.effArr[2];\n        let lifeTime = data.skillEff.effArr[3];\n\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.damage, [damage, DamageType.normal]);\n        let effData = new EffData(effInfo, data.attacker, data.defender);\n        let buff = new ChessBuff(lifeTime, deltaTime, data.defender, effData);\n        buff.setAttrChange(\"attackSpeed\", -attackSpeed);\n        data.defender.addBuff(buff);\n        return true;\n    }\n}"]}