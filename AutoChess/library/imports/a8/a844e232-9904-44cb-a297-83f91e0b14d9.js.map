{"version":3,"sources":["../../../../../assets/Script/Gui/assets/Script/Gui/UISetNpc.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Gui","sourcesContent":["import { g_UIManager } from \"./UIManager\";\nimport UIChessTable from \"./UIChessTable\";\nimport { ChessNpc } from \"../AutoBattle/Model/ChessNpc\";\n\n// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class UISetNpc extends cc.Component {\n    @property(cc.EditBox)\n    editBox: cc.EditBox = null;\n    @property(cc.Label)\n    gridText: cc.Label = null;\n    @property(cc.Label)\n    nameText: cc.Label = null;\n    @property(cc.Label)\n    hpText: cc.Label = null;\n    @property(cc.Label)\n    damageText: cc.Label = null;\n\n    gridPos = { x: 0, y: 0 };\n    // @property(cc.Label)\n    // label: cc.Label = null;\n\n    // @property\n    // text: string = 'hello';\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad() {\n    // }\n    start() {\n        this.hpText.string = \"hp: 0\";\n        this.damageText.string = \"damage: 0\";\n    }\n\n    onOkClick() {\n        let baseId = Math.floor(Number(this.editBox.string) / 10);\n        let level = Number(this.editBox.string) % 10;\n        let npcData = new ChessNpc(0, baseId, level, true);\n        let chessTable: UIChessTable = g_UIManager.getPanel(\"UIChessTable\");\n        chessTable.setGridLabel(this.gridPos.x, this.gridPos.y, npcData);\n        g_UIManager.closePanel(this);\n    }\n\n    onCloseClick() {\n        g_UIManager.closePanel(this)\n    }\n    // update (dt) {}\n\n    setGridPos(x: number, y: number) {\n        this.gridPos.x = x;\n        this.gridPos.y = y;\n        this.gridText.string = `pos:(${x + 1},${y + 1})`;\n    }\n\n    refreshInfo() {\n        let baseId = Math.floor(Number(this.editBox.string) / 10);\n        let level = Number(this.editBox.string) % 10;\n        let npcData = new ChessNpc(0, baseId, level, true);\n        this.nameText.string = npcData.name;\n        this.hpText.string = \"hp: \" + npcData.hp;\n        this.damageText.string = \"damage: \" + npcData.damage;\n    }\n\n}\n"]}