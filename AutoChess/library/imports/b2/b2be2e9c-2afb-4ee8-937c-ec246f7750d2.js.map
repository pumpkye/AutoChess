{"version":3,"sources":["../../../../../../assets/Script/AutoBattle/Input/assets/Script/AutoBattle/Input/InputCache.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/Input","sourcesContent":["import { testInputStr } from \"./TestInput\";\nimport { printDefault } from \"../OutPut/Printer\";\n\n/**\n * 为autobattleManager提供输入源，autoBattleManager从这里读取对局阵容\n * 提供工具函数从不同输入添加输入信息\n */\nclass InPutCache {\n    battleInfo: BattleInfo;\n    constructor() {\n\n    }\n\n    /**\n     * 通过BattleInfo对象设置battleInfo\n     * @param battleInfo 一回合的所有对战信息\n     */\n    setBattleInfo(battleInfo: BattleInfo) {\n        this.battleInfo = battleInfo;\n    }\n\n    /**\n     * 从json读取数据\n     * @param jsonStr json字符串\n     */\n    loadBattleInfoFromJson(jsonStr: string) {\n        let jsonObj = JSON.parse(jsonStr);\n        this.battleInfo = new BattleInfo(jsonObj.roundIndex);\n        for (let i = 0; i < jsonObj.matches.length; i++) {\n            const match = jsonObj.matches[i];\n            this.battleInfo.addMatch(match.a, match.b);\n        }\n        for (let i = 0; i < jsonObj.allLayout.length; i++) {\n            const layout = jsonObj.allLayout[i];\n            let layoutInfo = new LayoutInfo(layout.playerId);\n            for (let j = 0; j < layout.npcList.length; j++) {\n                const npc = layout.npcList[j];\n                layoutInfo.addChessNpcInfo(npc.thisId, npc.baseId, npc.level, { x: npc.posX, y: npc.posY });\n            }\n            this.battleInfo.addLayout(layoutInfo);\n        }\n    }\n\n    /**\n     * test success@4.17.2019\n     */\n    testLoadJson() {\n        this.loadBattleInfoFromJson(testInputStr);\n        console.log(this.battleInfo);\n    }\n\n    getBattleInfo() {\n        return this.battleInfo;\n    }\n\n    clear() {\n        this.battleInfo = null;\n    }\n}\n\nexport var g_InputCache = new InPutCache()\n\n/**\n * 单回合所有对局信息\n */\nexport class BattleInfo {\n    roundIndex: number;\n    matches: Array<MatchInfo>;\n    allLayout: Array<LayoutInfo>;\n    constructor(roundIndex: number) {\n        this.roundIndex = roundIndex;\n        this.matches = new Array<MatchInfo>();\n        this.allLayout = new Array<LayoutInfo>();\n    }\n    clear() {\n        this.matches = new Array<MatchInfo>();\n        this.allLayout = new Array<LayoutInfo>();\n    }\n    addMatch(playerThisIdA: number, playerThisIdB: number) {\n        this.matches.push(new MatchInfo(playerThisIdA, playerThisIdB));\n    }\n\n    addLayout(layout: LayoutInfo) {\n        this.allLayout.push(layout);\n    }\n\n    clearLayout() {\n        this.allLayout = new Array<LayoutInfo>();\n    }\n\n    getLayoutByPlayerId(playerId: number): LayoutInfo {\n        for (let i = 0; i < this.allLayout.length; i++) {\n            const layout = this.allLayout[i];\n            if (layout.playerThisId === playerId) {\n                return layout;\n            }\n        }\n        return null;\n    }\n}\n\n/**\n * 对局信息\n */\nclass MatchInfo {\n    playerThisIdA: number;\n    playerThisIdB: number;\n\n    constructor(playerThisIdA: number, playerThisIdB: number) {\n        this.playerThisIdA = playerThisIdA;\n        this.playerThisIdB = playerThisIdB;\n    }\n}\n\n/**\n * 玩家布局信息\n */\nexport class LayoutInfo {\n    playerThisId: number;\n    npcList: Array<ChessNpcInfo>;\n    constructor(thisId: number) {\n        this.playerThisId = thisId;\n        this.npcList = new Array<ChessNpcInfo>();\n    }\n    addChessNpcInfo(info: ChessNpcInfo): any;\n    addChessNpcInfo(thisId: number, baseId: number, level: number, pos: { x: number, y: number }): any;\n    addChessNpcInfo(arg1: number | ChessNpcInfo, baseId?: number, level?: number, pos?: { x: number, y: number }) {\n        if (typeof (arg1) === \"number\") {\n            this.npcList.push(new ChessNpcInfo(arg1, baseId, level, pos))\n        } else {\n            this.npcList.push(arg1);\n        }\n    }\n}\n\n/**\n * 单个npc的位置信息\n */\nexport class ChessNpcInfo {\n    thisId: number;\n    baseId: number;\n    level: number;\n    pos: {\n        x: number,\n        y: number,\n    }\n\n    constructor(thisId: number, baseId: number, level: number, pos: { x: number, y: number }) {\n        this.thisId = thisId;\n        this.baseId = baseId;\n        this.level = level;\n        this.pos = pos;\n    }\n}"]}