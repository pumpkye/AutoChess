{"version":3,"sources":["../../../../../assets/Script/Gui/assets/Script/Gui/UIMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Gui","sourcesContent":["import { printDefault } from \"../AutoBattle/OutPut/Printer\";\nimport { BattleInfo, LayoutInfo, g_InputCache } from \"../AutoBattle/Input/InputCache\";\nimport UIChessTable from \"./UIChessTable\";\nimport { g_AutoBattle } from \"../AutoBattle/AutoBattle\";\nimport { g_UIManager } from \"./UIManager\";\nimport UISaveLayout from \"./UISaveLayout\";\nimport UILoadLayout from \"./UILoadLayout\";\nimport { npc_data } from \"../AutoBattle/Tbx/npc_data\";\n\n// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class UIMain extends cc.Component {\n\n    @property(cc.Button)\n    startBattleBtn: cc.Button = null;\n\n    @property(cc.Label)\n    layoutACost: cc.Label = null;\n\n    @property(cc.Label)\n    layoutABuff: cc.Label = null;\n\n    @property(cc.Label)\n    layoutBCost: cc.Label = null;\n\n    @property(cc.Label)\n    layoutBBuff: cc.Label = null;\n\n    battleInfo: BattleInfo;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start() {\n        this.battleInfo = new BattleInfo(1);\n        this.battleInfo.addMatch(101, 102);\n    }\n\n    /**\n     * 刷新阵容cost和buff\n     */\n    refreshCostBuff() {\n        this.refreshBattleInfo();\n        let layoutA = this.battleInfo.getLayoutByPlayerId(101);\n        let sumCost = 0;\n        for (let i = 0; i < layoutA.npcList.length; i++) {\n            const npc = layoutA.npcList[i];\n            sumCost = sumCost + npc_data[npc.baseId].quality * Math.pow(3, npc.level - 1);\n        }\n        this.layoutACost.string = sumCost.toString();\n        sumCost = 0;\n        let layoutB = this.battleInfo.getLayoutByPlayerId(102);\n        for (let i = 0; i < layoutB.npcList.length; i++) {\n            const npc = layoutB.npcList[i];\n            sumCost = sumCost + npc_data[npc.baseId].quality * Math.pow(3, npc.level - 1);\n        }\n        this.layoutBCost.string = sumCost.toString();\n    }\n\n    refreshBattleInfo() {\n        let thisId = 0;\n        let chessTable: UIChessTable = g_UIManager.getPanel(\"UIChessTable\");\n        console.log(chessTable.layout)\n        let layoutInfoA = new LayoutInfo(101);\n        let layoutInfoB = new LayoutInfo(102);\n        for (const idx in chessTable.layout) {\n            if (chessTable.layout.hasOwnProperty(idx)) {\n                const npc = chessTable.layout[idx];\n                thisId = thisId + 1;\n                let y = Math.floor(Number(idx) / 8);\n                npc.thisId = thisId;\n                if (y > 3) {\n                    layoutInfoB.addChessNpcInfo(npc);\n                } else {\n                    layoutInfoA.addChessNpcInfo(npc);\n                }\n            }\n        }\n        this.battleInfo.clearLayout()\n        this.battleInfo.addLayout(layoutInfoA);\n        this.battleInfo.addLayout(layoutInfoB);\n    }\n\n    startBattle() {\n        console.log(\"onStartBattleTouch\");\n        this.refreshBattleInfo();\n        console.log(this.battleInfo);\n        g_InputCache.setBattleInfo(this.battleInfo);\n        g_AutoBattle.doAutoBattle();\n    }\n\n    clearLayout() {\n        let chessTable = g_UIManager.getPanel(\"UIChessTable\");\n        chessTable.clear();\n    }\n\n    saveLayout() {\n        let panel: UISaveLayout = g_UIManager.getOrCreatePanel(\"UISaveLayout\");\n\n    }\n\n    loadLayout() {\n        let panel: UILoadLayout = g_UIManager.getOrCreatePanel(\"UILoadLayout\")\n    }\n    // update (dt) {}\n}\n"]}