{"version":3,"sources":["../../../../../../assets/Script/AutoBattle/SkillEffect/assets/Script/AutoBattle/SkillEffect/LineDamage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum, DamageType } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { ChessNpc } from \"../Model/ChessNpc\";\nimport { dirConfig } from \"../Config/AutoBattleConfig\";\nimport { g_AutoBattleManager } from \"../AutoBattleManager\";\nimport { g_Util } from \"../Util\";\nimport { skillEffects } from \"./InitSkillEffect\";\n\n/**\n * 对当前方向一条长度为[0],宽度为[1]的直线上的目标造成[2]点魔法伤害\n */\nexport class LineDamage extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n\n    public get effectId(): number {\n        return SkillEffectEnum.lineDamage;\n    }\n\n    public get effName(): string {\n        return \"lineDamage\";\n    }\n\n    /**\n     * play\n     */\n    public play(data: EffData): boolean {\n        super.play(data);\n        let skillEff = data.skillEff;\n        let length = skillEff.effArr[0];\n        let width = skillEff.effArr[1];\n        let damage = skillEff.effArr[2];\n\n        let effArr = new Array<number>();\n        effArr.push(damage);\n        effArr.push(DamageType.magic);\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.damage, effArr);\n\n        let linePos = new Array<{ x: number, y: number }>();\n        let dirT = dirConfig[data.attacker.dir];\n        for (let i = 0; i < length; i++) {\n            let posX = data.attacker.posX + dirT.x * i;\n            let posY = data.attacker.posY + dirT.y * i;\n            if (posX > -1 && posX < 8 && posY > -1 && posY < 8) {\n                linePos.push({ x: posX, y: posY });\n            } else {\n                break;\n            }\n        }\n\n\n        let hitNpc = new Array<ChessNpc>();\n        for (let i = 0; i < g_AutoBattleManager.getEnemyList(data.attacker).length; i++) {\n            const npc = g_AutoBattleManager.getEnemyList(data.attacker)[i];\n            for (let j = 0; j < linePos.length; j++) {\n                const center = linePos[j];\n                if (g_Util.checkPosShortInRange(center.x, center.y, npc.posX, npc.posY, width)) {\n                    hitNpc.push(npc);\n                    break;\n                }\n            }\n        }\n\n        for (let i = 0; i < hitNpc.length; i++) {\n            const defender = hitNpc[i];\n            let effData = new EffData(effInfo, data.attacker, defender);\n            skillEffects[SkillEffectEnum.damage].play(effData);\n        }\n        return true;\n    }\n}"]}