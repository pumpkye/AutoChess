{"version":3,"sources":["../../../../../../assets/Script/AutoBattle/SkillEffect/assets/Script/AutoBattle/SkillEffect/BloodthirstySpearBuff.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AACpD,qDAAgE;AAChE,kDAA0D;AAC1D,qDAAiD;AACjD;;GAEG;AACH;IAA2C,yCAAe;IACtD;eACI,iBAAO;IACX,CAAC;IACD,sBAAW,2CAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,qBAAqB,CAAC;QACjD,CAAC;;;OAAA;IACD,sBAAW,0CAAO;aAAlB;YACI,OAAO,uBAAuB,CAAC;QACnC,CAAC;;;OAAA;IAEM,oCAAI,GAAX,UAAY,IAAa;QACrB,iBAAM,IAAI,YAAC,IAAI,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxC,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,4BAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QACjF,IAAI,MAAM,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChE,8BAAY,CAAC,iCAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,4BAAC;AAAD,CA1BA,AA0BC,CA1B0C,iCAAe,GA0BzD;AA1BY,sDAAqB","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum, DamageType } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { skillEffects } from \"./InitSkillEffect\";\n/**\n *  嗜血之矛debuff，造成[0]点纯粹伤害，并为攻击者回复同等血量\n */\nexport class BloodthirstySpearBuff extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n    public get effectId(): number {\n        return SkillEffectEnum.bloodthirstySpearBuff;\n    }\n    public get effName(): string {\n        return \"bloodthirstySpearBuff\";\n    }\n\n    public play(data: EffData): boolean {\n        super.play(data);\n        if (!data.defender || data.defender.isDead) {\n            return false;\n        }\n\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.damage, [data.skillEff.effArr[0], DamageType.real]);\n        let effect = new EffData(effInfo, data.attacker, data.defender);\n        skillEffects[SkillEffectEnum.damage].play(effect);\n        if (data.attacker && !data.attacker.isDead) {\n            data.attacker.reduceHp(-data.skillEff.effArr[0]);\n        }\n        return true;\n    }\n}"]}