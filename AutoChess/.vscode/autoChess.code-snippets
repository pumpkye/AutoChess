{
	// Place your AutoChess workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"create new SkillEffect": {
		"scope": "javascript,typescript",
		"prefix": "createSE",
		"body": [
			"import { BaseSkillEffect } from \"./BaseSkillEffect\";",
			"import { SkillEffectEnum } from \"./SkillEffectEnum\";",
			"import { EffData } from \"../model/EffectInfo\";",
			"/**",
			" * $3",
			" */",
			"export class $1 extends BaseSkillEffect {",
			"    constructor() {",
			"        super();",
			"    }",
			"    public get effectId(): number {",
			"        return SkillEffectEnum.$2;",
			"    }",
			"    public get effName(): string {",
			"        return \"$2\";",
			"    }",
			"",
			"    public play(data: EffData): boolean {",
			"        super.play(data);",
			"        $0",
			"        return true;",
			"    }",
			"}",
		],
		"description": "create new SkillEffect File"
	}
}