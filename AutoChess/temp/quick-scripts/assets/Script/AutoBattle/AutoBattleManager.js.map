{"version":3,"sources":["AutoBattleManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/AutoBattle","sourcesContent":["import { ChessNpc } from \"./Model/ChessNpc\";\nimport { raceBuffConfig, careerBuffConfig, dirConfig } from \"./Config/AutoBattleConfig\";\nimport { RaceSkill, CareerSkill } from \"./Model/ChessSkill\";\nimport { printErrMsg, pErrTag, printDefault, printBattleMsg, pTag, pBattleAction, printChessTable } from \"./OutPut/Printer\";\nimport { LayoutInfo } from \"./Input/InputCache\";\nimport { g_OutputCache } from \"./OutPut/OutPutCache\";\n\nexport enum Enum_Mode {\n    normal = 1,\n    quick,\n    test\n}\n\n/**\n * 单局对战的管理器\n */\nclass AutoBattleManager {\n    private _mode = 0;\n    private _matchIdx = -1;\n    private _randomSet: Array<number>;\n    private _chessTable: Array<Array<ChessNpc>>;\n    private _npcListA: Array<ChessNpc>;\n    private _npcListB: Array<ChessNpc>;\n    private _dpsInfo: Array<DpsInfo>;\n\n    private _allMyNpcCount = 0;\n    private _allEnemyNpcCount = 0;\n    private _curTime = 0;\n    private _deltaTime = 0;\n    private _isStart = false;\n    private _thisIdSeed = 0;\n\n    constructor() {\n        this._mode = Enum_Mode.test;\n        this.clear()\n    }\n\n    /**\n     * update\n     */\n    public update(dt: number): any {\n        if (!this._isStart) {\n            return\n        }\n        this._curTime += dt;\n        let tempList = new Array<ChessNpc>();\n        for (let i = 0; i < this._npcListA.length; i++) {\n            const e = this._npcListA[i];\n            if (!e.isDead) {\n                tempList.push(e);\n            }\n        }\n        for (let i = 0; i < this._npcListB.length; i++) {\n            const e = this._npcListB[i];\n            if (!e.isDead) {\n                tempList.push(e);\n            }\n        }\n        tempList.sort(function (a: ChessNpc, b: ChessNpc) {\n            if (a.speed == b.speed) {\n                return b.thisId - a.thisId;\n            } else {\n                return b.speed - a.speed;\n            }\n        });\n\n        for (let i = 0; i < tempList.length; i++) {\n            const e = tempList[i];\n            if (!e.isDead) {\n                e.update(dt);\n            }\n        }\n        for (let i = 0; i < tempList.length; i++) {\n            const e = tempList[i];\n            if (!e.isDead) {\n                e.attack();\n            }\n        }\n\n        this._npcListA = this.removeDeath(this._npcListA);\n        this._npcListB = this.removeDeath(this._npcListB);\n\n        this.checkGameResult();\n\n        this._deltaTime = this._deltaTime + dt;\n        if (this._deltaTime > 1000) {\n            this.printChessTable()\n            this._deltaTime = this._deltaTime - 1000;\n        }\n\n        if (this._mode == Enum_Mode.quick || this._mode == Enum_Mode.test) {\n            return this.update(50);\n        }\n    }\n\n    checkGameResult() {\n        if (this._curTime >= 60 * 1000) {\n            this._isStart = false;\n            // console.log(\"Game finish when time over\");\n        } else if (this._npcListA.length == 0) {\n            this._isStart = false;\n            // console.log(\"Game over!\");\n        } else if (this._npcListB.length == 0) {\n            this._isStart = false;\n            g_OutputCache.isWin = true;\n            // console.log(\"Win!\");\n        }\n        if (!this._isStart) {\n            this.printChessTable();\n            console.log(\"Game total time:\", this._curTime);\n        }\n    }\n    removeDeath(npcList: Array<ChessNpc>): Array<ChessNpc> {\n        let tempList = new Array<ChessNpc>();\n        for (let i = 0; i < npcList.length; i++) {\n            const e = npcList[i];\n            if (e.isDead) {\n                delete (this._chessTable[e.posX][e.posY]);\n            } else {\n                tempList.push(e);\n            }\n        }\n        return tempList;\n    }\n\n    start(layoutA: LayoutInfo, layoutB: LayoutInfo, matchIdx: number) {\n        if (!layoutA || !layoutB) {\n            return;\n        }\n        g_OutputCache.isWin = false;\n        this._matchIdx = matchIdx;\n        printDefault(\"autobattleManager start\");\n        this.clear();\n        // this._mode == Enum_Mode.test;\n        this.init(layoutA, layoutB);\n\n        this._curTime = 0;\n        this.prepareBattle();\n        this._isStart = true;\n        if (this.mode == Enum_Mode.quick) {\n            this.update(50);\n        }\n    }\n\n    init(layoutA: LayoutInfo, layoutB: LayoutInfo) {\n        printDefault('curMode' + this.mode);\n        this.initNpcList(layoutA, layoutB);\n        this.initChessTable();\n    }\n\n    /**\n    * 初始化输入\n    */\n    initNpcList(layoutA: LayoutInfo, layoutB: LayoutInfo) {\n        this._npcListA = new Array<ChessNpc>();\n        this._npcListB = new Array<ChessNpc>();\n        for (let i = 0; i < layoutA.npcList.length; i++) {\n            const npc = layoutA.npcList[i];\n            let chessNpc = new ChessNpc(npc.thisId, npc.baseId, npc.level, true);\n            chessNpc.setPosition(npc.pos.x, npc.pos.y);\n            this._npcListA.push(chessNpc);\n        }\n        for (let i = 0; i < layoutB.npcList.length; i++) {\n            const npc = layoutB.npcList[i];\n            let chessNpc = new ChessNpc(npc.thisId, npc.baseId, npc.level, false);\n            chessNpc.setPosition(7 - npc.pos.x, 7 - npc.pos.y);\n            this._npcListB.push(chessNpc);\n        }\n    }\n\n    /**\n     * 初始化棋盘\n     */\n    initChessTable() {\n        this._chessTable = new Array<Array<ChessNpc>>();\n        for (let i = 0; i < 8; i++) {\n            this._chessTable[i] = new Array();\n        }\n        for (let i = 0; i < this._npcListA.length; i++) {\n            const npc = this._npcListA[i];\n            this._chessTable[npc.posX][npc.posY] = npc;\n        }\n        for (let i = 0; i < this._npcListB.length; i++) {\n            const npc = this._npcListB[i];\n            this._chessTable[npc.posX][npc.posY] = npc;\n        }\n        this.printChessTable();\n    }\n\n    /**\n     * 添加种族buff、职业buff, npc技能初始化\n     */\n    prepareBattle() {\n        printBattleMsg(pTag.battle, pBattleAction.prepare, \"初始化我方种族buff\");\n        this.checkRaceBuff(this._npcListA);\n        printBattleMsg(pTag.battle, pBattleAction.prepare, \"初始化我方职业buff\");\n        this.checkCareerBuff(this._npcListA);\n        printBattleMsg(pTag.battle, pBattleAction.prepare, \"初始化敌方种族buff\");\n        this.checkRaceBuff(this._npcListB);\n        printBattleMsg(pTag.battle, pBattleAction.prepare, \"初始化敌方职业buff\");\n        this.checkCareerBuff(this._npcListB);\n\n        for (let i = 0; i < this._npcListA.length; i++) {\n            const npc = this._npcListA[i];\n            npc.initSkillList();\n        }\n\n        for (let i = 0; i < this._npcListB.length; i++) {\n            const npc = this._npcListB[i];\n            npc.initSkillList();\n        }\n        this.printChessTable();\n    }\n\n    checkRaceBuff(npcList: Array<ChessNpc>) {\n        for (const key in raceBuffConfig) {\n            if (raceBuffConfig.hasOwnProperty(key)) {\n                let tempList = new Array<ChessNpc>();\n                for (let i = 0; i < npcList.length; i++) {\n                    const npc = npcList[i];\n                    if (npc.race == Number(key)) {\n                        tempList[npc.baseId] = npc;\n                    }\n                }\n                const element = raceBuffConfig[key];\n                let raceNum = 0;\n                for (const baseId in tempList) {\n                    if (tempList.hasOwnProperty(baseId)) {\n                        const npc = tempList[baseId];\n                        raceNum += 1;\n                        if (element[raceNum]) {\n                            printDefault(\"raceNum:\" + raceNum);\n                            // console.log(\"触发种族buff:\", element[raceNum]);\n                            let raceSkill = new RaceSkill(element[raceNum], Number(key), npc.isTeamA);\n                            raceSkill.play();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    checkCareerBuff(npcList: Array<ChessNpc>) {\n        for (const key in careerBuffConfig) {\n            if (careerBuffConfig.hasOwnProperty(key)) {\n                const element = careerBuffConfig[key];\n                let careerNum = 0;\n                let tempList = new Array<ChessNpc>();\n                for (let i = 0; i < npcList.length; i++) {\n                    const npc = npcList[i];\n                    if (npc.career == Number(key)) {\n                        tempList[npc.baseId] = npc;\n                    }\n                }\n                for (const baseId in tempList) {\n                    if (tempList.hasOwnProperty(baseId)) {\n                        const npc = tempList[baseId];\n                        careerNum += 1;\n                        if (element[careerNum]) {\n                            // console.log(\"触发职业buff:\", element[careerNum]);\n                            let careerSkill = new CareerSkill(element[careerNum], Number(key), npc.isTeamA);\n                            careerSkill.play();\n                        }\n                    }\n                }\n                for (let i = 0; i < tempList.length; i++) {\n\n                }\n            }\n        }\n    }\n\n    /**\n     * 返回一个[1,num]的随机数\n     * @param num \n     */\n    public getRandomNumber(num: number): number {\n        if (this._mode == Enum_Mode.quick || this._mode == Enum_Mode.test) {\n            let rad = Math.floor(Math.random() * num) + 1;\n            this._randomSet.push(rad);\n            return rad;\n        } else {\n            let rad = this._randomSet.shift();\n            if (!rad || rad > num) {\n                if (!rad) {\n                    printErrMsg(pErrTag.randomNum, { max: num, rad: \"null\" });\n                    // console.log(\"no enough random number\");\n                } else {\n                    printErrMsg(pErrTag.randomNum, { max: num, rad: rad });\n                    // console.log(\"get error random number\")\n                }\n                console.log(\"no enough random num\");\n                rad = Math.floor(Math.random() * num) + 1;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * 添加dps记录\n     */\n    public addDpsInfo(thisId: number, baseId: number, isTeamA: boolean, dps: number) {\n        if (this._dpsInfo[thisId]) {\n            let dpsInfo = this._dpsInfo[thisId];\n            dpsInfo.addDps(dps, this.curTime);\n        } else {\n            let dpsInfo = new DpsInfo(this.matchIdx, thisId, baseId, isTeamA);\n            dpsInfo.addDps(dps, this.curTime);\n            this._dpsInfo[thisId] = dpsInfo;\n        }\n    }\n\n    public getDpsInfo(thisId: number) {\n        return this._dpsInfo[thisId];\n    }\n\n    public set mode(v: number) {\n        this._mode = v;\n    }\n\n    public get mode(): number {\n        return this._mode;\n    }\n\n    public get chessTable(): Array<Array<ChessNpc>> {\n        return this._chessTable;\n    }\n\n    public get curTime(): number {\n        return this._curTime;\n    }\n\n    public get matchIdx(): number {\n        return this._matchIdx;\n    }\n\n    public get npcListA(): Array<ChessNpc> {\n        return this._npcListA;\n    }\n\n    public get npcListB(): Array<ChessNpc> {\n        return this._npcListB;\n    }\n\n    public getFriendList(chessNpc: ChessNpc): Array<ChessNpc> {\n        if (chessNpc && !chessNpc.isTeamA) {\n            return this._npcListB;\n        }\n        return this._npcListA;\n    }\n\n    public getEnemyList(chessNpc: ChessNpc): Array<ChessNpc> {\n        if (chessNpc && !chessNpc.isTeamA) {\n            return this._npcListA;\n        }\n        return this._npcListB;\n    }\n\n    public getChessNpc(posX: number, posY: number) {\n        if (this.chessTable && this.chessTable[posX] && this.chessTable[posX][posY]) {\n            return this.chessTable[posX][posY]\n        }\n    }\n\n    public getChessNpcByThisId(thisId: number) {\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                let chessNpc = this.chessTable[i][j];\n                if (chessNpc && chessNpc.thisId == thisId) {\n                    return chessNpc\n                }\n            }\n\n        }\n    }\n\n    public getNearBlankPosition(center: { x: number, y: number }): { x: number, y: number } {\n        let chessTable = this.chessTable;\n        for (let i = 1; i < 9; i++) {\n            for (let dir = 0; dir < 8; dir++) {\n                let dirT = dirConfig[dir];\n                let x = center.x + dirT.x * i;\n                let y = center.y + dirT.y * i;\n                if (this.isInChessTable(x, y) && !chessTable[x][y]) {\n                    return { x, y };\n                }\n            }\n\n        }\n    }\n\n    public isInChessTable(x: number, y: number) {\n        return (x >= 0 && x < 8 && y >= 0 && y < 8);\n    }\n\n    /**\n     * 约定：生成的thisId>100000,若有服务器生成的thisId，注意一下这里不要冲突\n     */\n    public generateThisId() {\n        this._thisIdSeed = this._thisIdSeed + 1;\n        return 100000 + this._thisIdSeed;\n    }\n    /**\n     * clear\n     */\n    public clear() {\n        printDefault(\"auto BattleManager clear\");\n        this._npcListA = null;\n        this._npcListB = null;\n        this._chessTable = null;\n\n        this._isStart = false;\n        this._curTime = 0;\n        this._deltaTime = 0;\n        this._allEnemyNpcCount = 0;\n        this._allMyNpcCount = 0;\n        this._thisIdSeed = 0;\n        this._randomSet = new Array<number>();\n        this._dpsInfo = new Array();\n    }\n\n\n    /**\n     * 打印棋盘\n     */\n    public printChessTable() {\n        let str = \"curTime:\" + this.curTime + \"=======================================\\n\";\n        for (let i = -1; i < 8; i++) {\n            str += (i + 1) + \"\\t\\t\";\n        }\n        str += \"\\n\";\n        for (let j = 0; j < 8; j++) {\n            let s = (j + 1) + \"\\t\\t\";\n            for (let i = -1; i < 8; i++) {\n                if (this.chessTable[i] && this.chessTable[i][j]) {\n                    let npc = this.chessTable[i][j];\n                    if (!npc.isDead) {\n                        s = `${s}${npc.printName}`;\n                    } else {\n                        s = s + \"\\t\";\n                    }\n                } else {\n                    s = s + \"\\t\";\n                }\n                s = s + \"\\t\";\n            }\n            str = str + s + \"\\n\";\n        }\n        str = str + \"==================================================================\\n\";\n        printChessTable(str);\n        // console.log(str);\n    }\n}\n\nexport var g_AutoBattleManager = new AutoBattleManager()\n\nclass DpsInfo {\n    matchIdx = 0;\n    thisId: number;\n    baseId: number;\n    isTeamA = false;\n    dps: number;\n    time: number;\n    constructor(matchIdx: number, thisId: number, baseId: number, isTeamA: boolean) {\n        this.matchIdx = matchIdx;\n        this.thisId = thisId;\n        this.baseId = baseId;\n        this.isTeamA = isTeamA;\n        this.dps = 0;\n        this.time = 0;\n    }\n\n    addDps(dps: number, time: number) {\n        this.dps = this.dps + dps;\n        this.time = time;\n    }\n}"]}