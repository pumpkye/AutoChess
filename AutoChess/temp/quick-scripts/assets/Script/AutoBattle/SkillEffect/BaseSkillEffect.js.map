{"version":3,"sources":["BaseSkillEffect.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AAGpD,gCAAiC;AACjC,0DAA2D;AAC3D,6CAA8F;AAE9F;IACI;QACI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,sBAAW,qCAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,UAAU,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAW,oCAAO;aAAlB;YACI,OAAO,iBAAiB,CAAC;QAC7B,CAAC;;;OAAA;IAED,sCAAY,GAAZ,UAAa,OAAwB,EAAE,KAAa,EAAE,KAAc,EAAE,MAAiC;QACnG,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAY,CAAC;QACrC,IAAI,OAAO,GAAG,IAAI,KAAK,EAAY,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,aAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;gBACxH,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;SACJ;QACD,IAAI,KAAK,IAAI,QAAQ,CAAC,MAAM,EAAE;YAC1B,OAAO,QAAQ,CAAC;SACnB;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,GAAG,GAAG,uCAAmB,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACnE,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACf,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/B;iBAAM;gBACH,qBAAW,CAAC,iBAAO,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;aACtE;SACJ;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAED;;OAEG;IACI,8BAAI,GAAX,UAAY,IAAa;QACrB,wBAAc,CAAC,cAAI,CAAC,MAAM,EAAE,uBAAa,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,sBAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,0CAAe","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { SkillEffectEnum } from \"./SkillEffectEnum\";\nimport { EffData } from \"../Model/EffectInfo\";\nimport { ChessNpc } from \"../Model/ChessNpc\";\nimport { g_Util } from \"../Util\";\nimport { g_AutoBattleManager } from \"../AutoBattleManager\";\nimport { printBattleMsg, printErrMsg, pErrTag, pTag, pBattleAction } from \"../OutPut/Printer\";\n\nexport class BaseSkillEffect {\n    constructor() {\n        console.log(\"init skillEffect:\", this.effName);\n    }\n\n    public get effectId(): number {\n        return SkillEffectEnum.baseEffect;\n    }\n\n    public get effName(): string {\n        return \"BaseSkillEffect\";\n    }\n\n    getRandomNpc(npcList: Array<ChessNpc>, count: number, range?: number, center?: { x: number, y: number }) {\n        let tempList = new Array<ChessNpc>();\n        let hitList = new Array<ChessNpc>();\n        for (let i = 0; i < npcList.length; i++) {\n            const npc = npcList[i];\n            if ((!range || !center) || (range && center && g_Util.checkPosShortInRange(center.x, center.y, npc.posX, npc.posY, range))) {\n                tempList.push(npc);\n            }\n        }\n        if (count >= tempList.length) {\n            return tempList;\n        }\n        for (let i = 0; i < count; i++) {\n            let rad = g_AutoBattleManager.getRandomNumber(tempList.length) - 1;\n            if (tempList[rad]) {\n                hitList.push(tempList[rad]);\n            } else {\n                printErrMsg(pErrTag.randomNum, { max: tempList.length, rad: rad });\n            }\n        }\n        return hitList;\n    }\n\n    /**\n     * play\n     */\n    public play(data: EffData): any {\n        printBattleMsg(pTag.battle, pBattleAction.doSkillEffect, this.effName);\n        return true;\n    }\n}\n\n"]}