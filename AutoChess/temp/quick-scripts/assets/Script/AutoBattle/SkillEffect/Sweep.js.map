{"version":3,"sources":["Sweep.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AACpD,qDAAgE;AAChE,kDAA0D;AAC1D,qDAAiD;AACjD,0DAA2D;AAC3D;;GAEG;AACH;IAA2B,yBAAe;IACtC;eACI,iBAAO;IACX,CAAC;IACD,sBAAW,2BAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,KAAK,CAAC;QACjC,CAAC;;;OAAA;IACD,sBAAW,0BAAO;aAAlB;YACI,OAAO,OAAO,CAAC;QACnB,CAAC;;;OAAA;IAEM,oBAAI,GAAX,UAAY,IAAa;QACrB,iBAAM,IAAI,YAAC,IAAI,CAAC,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1C,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QAE1C,IAAI,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,4BAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACnE,IAAI,OAAO,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjE,8BAAY,CAAC,iCAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEnD,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC3B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,4BAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACnE,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,uCAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAC9I,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACzC,IAAI,SAAO,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAC5D,8BAAY,CAAC,iCAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAO,CAAC,CAAC;aACtD;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,YAAC;AAAD,CArCA,AAqCC,CArC0B,iCAAe,GAqCzC;AArCY,sBAAK","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum, DamageType } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { skillEffects } from \"./InitSkillEffect\";\nimport { g_AutoBattleManager } from \"../AutoBattleManager\";\n/**\n * 横扫，对目标造成[0]倍普通攻击的物理伤害，对目标周围[1]格的目标造成[2]倍普通攻击的物理伤害\n */\nexport class Sweep extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n    public get effectId(): number {\n        return SkillEffectEnum.sweep;\n    }\n    public get effName(): string {\n        return \"sweep\";\n    }\n\n    public play(data: EffData): boolean {\n        super.play(data);\n        let per1 = data.skillEff.effArr[0];\n        let range = data.skillEff.effArr[1];\n        let per2 = data.skillEff.effArr[2];\n\n        let damage1 = data.attacker.damage * per1;\n        let damage2 = data.attacker.damage * per2;\n\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.damage, [damage1, DamageType.normal]);\n        let effData = new EffData(effInfo, data.attacker, data.defender);\n        skillEffects[SkillEffectEnum.damage].play(effData);\n\n        effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.damage, [damage2, DamageType.normal]);\n        let hitNpc = this.getRandomNpc(g_AutoBattleManager.getEnemyList(data.attacker), 100, range, { x: data.defender.posX, y: data.defender.posY });\n        for (let i = 0; i < hitNpc.length; i++) {\n            const defender = hitNpc[i];\n            if (defender.thisId != data.defender.thisId) {\n                let effData = new EffData(effInfo, data.attacker, defender);\n                skillEffects[SkillEffectEnum.damage].play(effData);\n            }\n        }\n        return true;\n    }\n}"]}