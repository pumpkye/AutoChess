{"version":3,"sources":["SwordStorm.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AACpD,qDAAqE;AACrE,kDAA0D;AAC1D,gDAA+C;AAE/C;;GAEG;AACH;IAAgC,8BAAe;IAC3C;eACI,iBAAO;IACX,CAAC;IACD,sBAAW,gCAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,UAAU,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAW,+BAAO;aAAlB;YACI,OAAO,YAAY,CAAC;QACxB,CAAC;;;OAAA;IAED,yBAAI,GAAJ,UAAK,IAAa;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;YAC9B,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAElC,iBAAiB;QACjB,IAAI,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;QACjE,IAAI,OAAO,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACvD,IAAI,SAAS,GAAG,IAAI,qBAAS,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,iCAAe,CAAC,QAAQ,CAAC,CAAC;QAChG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5B,QAAQ;QACR,SAAS,GAAG,IAAI,qBAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,iCAAe,CAAC,GAAG,CAAC,CAAC;QAC5E,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,iBAAC;AAAD,CAlCA,AAkCC,CAlC+B,iCAAe,GAkC9C;AAlCY,gCAAU","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum, BuffAndDotState } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { ChessBuff } from \"../Model/ChessBuff\";\n\n/**\n * 旋风斩，以自己为中心，[0]范围内，每[1]秒造成[2]点伤害，持续[3]秒，期间自己无法攻击\n */\nexport class SwordStorm extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n    public get effectId(): number {\n        return SkillEffectEnum.swordStorm;\n    }\n\n    public get effName(): string {\n        return \"swordStorm\";\n    }\n\n    play(data: EffData) {\n        let defender = data.defender;\n        if (!defender || defender.isDead) {\n            return false;\n        }\n        let skillEff = data.skillEff;\n        let range = skillEff.effArr[0];\n        let deltaTime = skillEff.effArr[1];\n        let damage = skillEff.effArr[2];\n        let lifeTime = skillEff.effArr[3];\n\n        //持续造成伤害，持续期间无法普攻\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.circleDamage, [range, 100, damage]);\n        let effData = new EffData(effInfo, defender, defender);\n        let chessBuff = new ChessBuff(lifeTime, deltaTime, defender, effData, BuffAndDotState.beDisarm);\n        defender.addBuff(chessBuff);\n        //持续期间魔免\n        chessBuff = new ChessBuff(lifeTime, 0, defender, null, BuffAndDotState.bkb);\n        defender.addBuff(chessBuff);\n        return true;\n    }\n}"]}