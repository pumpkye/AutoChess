{"version":3,"sources":["Tenacity.ts"],"names":[],"mappings":";;;;;AAAA,qDAAoD;AACpD,qDAAoD;AACpD,kDAA0D;AAC1D,gDAA+C;AAC/C;;GAEG;AACH;IAA8B,4BAAe;IACzC;eACI,iBAAO;IACX,CAAC;IACD,sBAAW,8BAAQ;aAAnB;YACI,OAAO,iCAAe,CAAC,QAAQ,CAAC;QACpC,CAAC;;;OAAA;IACD,sBAAW,6BAAO;aAAlB;YACI,OAAO,UAAU,CAAC;QACtB,CAAC;;;OAAA;IAEM,uBAAI,GAAX,UAAY,IAAa;QACrB,iBAAM,IAAI,YAAC,IAAI,CAAC,CAAC;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;YAC9B,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAG,IAAI,oBAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,IAAI,GAAG,IAAI,qBAAS,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,eAAC;AAAD,CA5BA,AA4BC,CA5B6B,iCAAe,GA4B5C;AA5BY,4BAAQ","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/SkillEffect","sourcesContent":["import { BaseSkillEffect } from \"./BaseSkillEffect\";\nimport { SkillEffectEnum } from \"./SkillEffectEnum\";\nimport { EffData, EffectInfo } from \"../Model/EffectInfo\";\nimport { ChessBuff } from \"../Model/ChessBuff\";\n/**\n * 增加状态抗性[0]%,增加回血每[1]秒[2]点\n */\nexport class Tenacity extends BaseSkillEffect {\n    constructor() {\n        super();\n    }\n    public get effectId(): number {\n        return SkillEffectEnum.tenacity;\n    }\n    public get effName(): string {\n        return \"tenacity\";\n    }\n\n    public play(data: EffData): boolean {\n        super.play(data);\n        let defender = data.defender;\n        if (!defender || defender.isDead) {\n            return false;\n        }\n        let rhp = data.skillEff.effArr[2];\n        let rhpt = data.skillEff.effArr[1];\n        let reduceDebuffPer = data.skillEff.effArr[0];\n        let effInfo = new EffectInfo();\n        effInfo.init(SkillEffectEnum.recoverHp, [rhp]);\n        let effData = new EffData(effInfo, data.attacker, data.defender);\n        let buff = new ChessBuff(0, rhpt, data.defender, effData);\n        buff.setAttrChange(\"reduceDebuffTime\", reduceDebuffPer);\n        data.defender.addBuff(buff);\n        return true;\n    }\n}"]}