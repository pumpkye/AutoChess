{"version":3,"sources":["ChessNpc.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/Model","sourcesContent":["import { ChessNpcBaseData } from \"../TbxModel/ChessNpcBaseData\";\nimport { ChessBuff, AttrChangeInfo, ChessShield } from \"./ChessBuff\";\nimport { ChessSkill, NormalSkill } from \"./ChessSkill\";\nimport { g_AutoBattleManager } from \"../AutoBattleManager\";\nimport { g_Util } from \"../Util\";\nimport { CareerEnum } from \"../Config/AutoBattleConfig\";\nimport { printBattleMsg, pBattleAction, pTag, printDefault } from \"../OutPut/Printer\";\nimport { BuffAndDotState, SkillEffectEnum, DamageType } from \"../SkillEffect/SkillEffectEnum\";\nimport { EffectInfo, EffData } from \"./EffectInfo\";\nimport { skillEffects } from \"../SkillEffect/InitSkillEffect\";\n/**\n * @author pumpkye\n * @description 棋子\n */\nexport class ChessNpc {\n    readonly thisId: number;\n    readonly baseId: number;\n    teamA: boolean;\n    curTarget: ChessNpc;\n    curTargetThisId: number;\n    public hitArrThisId: Array<number>; //攻击该npc的npc列表\n\n    protected _lockTime = 0;\n    dir = 0;\n    protected _pos = {\n        x: 0,\n        y: 0,\n    }\n\n    readonly baseData: ChessNpcBaseData;\n    protected _skillList: Array<ChessSkill>;\n    protected _buffArr: Array<ChessBuff>;\n    protected _buffStateArr: Array<boolean>;\n    // protected _attrChangeMap: Map<string, Array<AttrChangeInfo>>;\n    protected _attrChangeMap: { [index: string]: Array<AttrChangeInfo> };\n    protected _shieldMap: { [index: string]: Array<ChessShield> };\n    protected _isDead = false;\n\n    // 数值数据\n    protected _hp = 0;\n    protected _maxHp = 0;\n    protected _mp = 0;\n    protected _maxMp = 0;\n    protected _damage = 0;\n    protected _defence = 0;\n    protected _mDefence = 0;\n    protected _attSpeed = 0;\n    protected _attRange = 0;\n    protected _speed = 0;\n    protected _mvSpeed = 0;\n    protected _level = 1;\n    protected _moveStep = 0;\n\n    constructor(thisId: number, baseId: number, level: number, teamA: boolean) {\n        this.thisId = thisId;\n        this.baseId = baseId;\n        this.teamA = teamA;\n        this.baseData = new ChessNpcBaseData(baseId);\n        this._level = level;\n        //初始化数值\n        this._hp = this.baseHp;\n        this._maxHp = this.baseHp;\n        this._mp = 0;\n        this._maxMp = this.baseMp;\n        this._damage = this.baseDamage;\n        this._defence = this.baseDefence;\n        this._mDefence = this.baseMDefence;\n        this._attSpeed = this.baseAttSpeed;\n        this._attRange = this.baseAttRange;\n        this._speed = this.baseSpeed;\n        this._mvSpeed = this.baseMvSpeed;\n\n        this._buffArr = new Array();\n        this._buffStateArr = new Array();\n        this.hitArrThisId = new Array();\n        this._attrChangeMap = {};\n        this._shieldMap = {};\n    }\n\n    update(dt: number) {\n        this.updateBuff(dt);\n        this.updateSkill(dt);\n        if (this._lockTime > 0) {\n            this._lockTime = this._lockTime - dt;\n            return;\n        }\n        if (this.hasBuffState(BuffAndDotState.coma)) {\n            return;\n        }\n        this.findTarget();\n        this.move();\n    }\n\n    updateBuff(dt: number) {\n        let tempT = new Array<ChessBuff>();\n        for (let i = 0; i < this._buffArr.length; i++) {\n            const buff = this._buffArr[i];\n            buff.update(dt);\n            if (buff.isValid) {\n                tempT.push(buff);\n            }\n        }\n        this._buffArr = tempT;\n    }\n\n    updateSkill(dt: number) {\n        for (let i = 0; i < this._skillList.length; i++) {\n            const skill = this._skillList[i];\n            skill.update(dt);\n        }\n    }\n\n    addBuff(buff: ChessBuff) {\n        this._buffArr.push(buff);\n    }\n\n    addShield(shield: ChessShield) {\n        this.addBuff(shield);\n        if (!this._shieldMap[shield.name]) {\n            this._shieldMap[shield.name] = new Array();\n        }\n        let infoArr: Array<ChessShield> = this._shieldMap[shield.name];\n        infoArr.push(shield);\n        shield.idx = infoArr.length - 1;\n    }\n\n    removeShield(shield: ChessShield) {\n        let infoArr: Array<ChessShield> = this._shieldMap[shield.name];\n        if (infoArr && infoArr[shield.idx]) {\n            for (let i = shield.idx + 1; i < infoArr.length; i++) {\n                const element = infoArr[i];\n                element.idx = element.idx - 1;\n            }\n            infoArr.splice(shield.idx, 1);\n        }\n    }\n\n    getShieldState(shieldName: string): Array<ChessShield> {\n        return this._shieldMap[shieldName];\n    }\n\n    findTarget() {\n        if (this.curTarget && !this.curTarget.isDead) {\n            return true\n        }\n        this.setTarget(null);\n        let dt = 100;\n        let target = null;\n        for (let i = 0; i < g_AutoBattleManager.getEnemyList(this).length; i++) {\n            const npc = g_AutoBattleManager.getEnemyList(this)[i];\n            if (!npc.isDead && g_Util.checkPosShortInRange(this.posX, this.posY, npc.posX, npc.posY, this.attRange)) {\n                let dis = g_Util.getCityDistance(this, npc)\n                if (dis < dt) {\n                    dt = dis;\n                    target = npc;\n                } else if (dis == dt) {\n                    let dy1 = Math.abs(this.posY - target.posY);\n                    let dy2 = Math.abs(this.posY - npc.posY);\n                    if (dy2 < dy1) {\n                        target = npc;\n                    } else if (dy1 == dy2) {\n                        let dx1 = Math.abs(target.posX - 4);\n                        let dx2 = Math.abs(npc.posX - 4);\n                        if (dx2 < dx1) {\n                            target = npc;\n                        }\n                    }\n                }\n            }\n        }\n        if (!target) {\n            return false\n        }\n        this.setTarget(target);\n        printBattleMsg(pTag.battle, pBattleAction.select, { npc: this, target: target });\n        // console.log(this.printName + \" 选择了一个目标： \" + target.printName);\n        return true\n    }\n\n    move() {\n        if (this.curTarget && !this.curTarget.isDead\n            && g_Util.checkPosShortInRange(this.posX, this.posY, this.curTarget.posX, this.curTarget.posY, this.attRange)) {\n            return true\n        }\n        if (this.moveStep == 0) {\n            return true\n        }\n        this.setTarget(null);\n        let tempT = new Array<ChessNpc>();\n        let npcList = g_AutoBattleManager.getEnemyList(this);\n        for (let i = 0; i < npcList.length; i++) {\n            tempT.push(npcList[i]);\n        }\n        if (this.career == CareerEnum.assissan) {\n            this.assassinMove(tempT);\n        } else {\n            this.normalMove(tempT);\n        }\n    }\n\n    assassinMove(tempT: Array<ChessNpc>) {\n        if (tempT.length == 0) {\n            return\n        }\n        //选目标\n        let dx = 100\n        let dy = 0\n        let target = null\n        let idx = 0\n        for (let i = 0; i < tempT.length; i++) {\n            const v = tempT[i];\n            let dy1 = Math.abs(this.posY - v.posY);\n            let dx1 = Math.abs(this.posX - v.posX);\n            if (dy1 > dy) {\n                target = v;\n                idx = i;\n                dy = dy1;\n                dx = dx1;\n            } else if (dy1 == dy) {\n                if (dx1 < dx) {\n                    target = v;\n                    idx = i;\n                    dx = dx1;\n                } else if (dx1 == dx) {\n                    dx1 = Math.abs(target.posX - 4);\n                    let dx2 = Math.abs(v.posX - 4);\n                    if (dx2 < dx1) {\n                        idx = i;\n                        target = v;\n                    }\n                }\n            }\n        }\n        if (!target) {\n            return\n        }\n\n        //添加候选位置\n        let tempPosList = new Array();\n        let chessTable = g_AutoBattleManager.chessTable;\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                if (!chessTable[i][j]) {\n                    if (g_Util.checkPosShortInRange(i, j, target.posX, target.posY, this.attRange)) {\n                        tempPosList.push({ x: i, y: j });\n                    }\n                }\n            }\n\n        }\n        if (tempPosList.length == 0) {\n            tempT.splice(idx, 1);\n            this.assassinMove(tempT);\n            return\n        }\n        this.setTarget(target);\n        printBattleMsg(pTag.battle, pBattleAction.select, { npc: this, target: target });\n        // console.log(this.printName + \"选择了assassin目标\" + target.printName);\n\n        //选择移动位置\n        dx = 10;\n        dy = 0;\n        let targetPos = null;\n        for (let i = 0; i < tempPosList.length; i++) {\n            const v = tempPosList[i];\n            let dx1 = Math.abs(this.posX - v.x);\n            let dy1 = Math.abs(this.posY - v.y);\n            if (dy1 > dy) {\n                targetPos = v;\n                dy = dy1;\n                dx = dx1;\n            } else if (dy1 == dy) {\n                if (dx1 < dx) {\n                    targetPos = v;\n                    dx = dx1;\n                } else if (dx1 == dx) {\n                    dx1 = Math.abs(targetPos.x - 4);\n                    let dx2 = Math.abs(v.x - 4)\n                    if (dx2 < dx1) {\n                        targetPos = v;\n                    }\n                }\n            }\n        }\n        if (targetPos) {\n            this.moveTo(targetPos)\n        }\n    }\n\n    normalMove(tempT: Array<ChessNpc>) {\n        if (tempT.length == 0) {\n            return\n        }\n        printDefault(\"normalMove\");\n        // 选目标\n        let dt = 100\n        let target = null\n        let idx = 0\n        for (let i = 0; i < tempT.length; i++) {\n            const v = tempT[i];\n            let dis = g_Util.getCityDistance(this, v);\n            if (dis < dt) {\n                dt = dis;\n                target = v;\n                idx = i;\n            } else if (dis == dt) {\n                let dy1 = Math.abs(this.posY - target.posY);\n                let dy2 = Math.abs(this.posY - v.posY);\n                if (dy2 < dy1) {\n                    idx = i;\n                    target = v;\n                } else if (dy2 == dy1) {\n                    let dx1 = Math.abs(target.posX - 4);\n                    let dx2 = Math.abs(v.posX - 4);\n                    if (dx2 < dx1) {\n                        idx = i;\n                        target = v;\n                    }\n                }\n            }\n        }\n        if (!target) {\n            return\n        }\n        //选位置\n        let canMovePos = new Array();   //可移动到的位置\n        let tempPosList = new Array();  //可以攻击到目标的候选位置\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                if (!g_AutoBattleManager.chessTable[i][j]) {\n                    if (g_Util.checkPosShortInRange(i, j, target.posX, target.posY, this.attRange)) {\n                        tempPosList.push({ x: i, y: j });\n                    }\n\n                    if (g_Util.checkPosShortInRange(i, j, this.posX, this.posY, this.moveStep)) {\n                        canMovePos.push({ x: i, y: j });\n                    }\n                }\n            }\n        }\n        if (canMovePos.length == 0) {\n            return\n        }\n        if (tempPosList.length == 0) {\n            tempT.splice(idx, 1);\n            this.normalMove(tempT);\n            return\n        }\n\n        //在备选的可以攻击到目标的候选位置中选择一个下一步要移动到的位置\n        dt = 100;\n        let targetPos = null;\n        for (let i = 0; i < tempPosList.length; i++) {\n            let v = tempPosList[i]\n            for (let j = 0; j < canMovePos.length; j++) {\n                let w = canMovePos[j]\n                let dis = g_Util.getCityDistance(v.x, v.y, w.x, w.y)\n                if (dis < dt) {\n                    dt = dis;\n                    targetPos = w;\n                } else if (dis == dt) {\n                    let dy1 = Math.abs(this.posY - targetPos.y);\n                    let dy2 = Math.abs(this.posY - w.y);\n                    if (dy2 < dy1) {\n                        targetPos = w;\n                    } else if (dy1 == dy2) {\n                        let dx1 = Math.abs(targetPos.x - 4);\n                        let dx2 = Math.abs(w.x - 4);\n                        if (dx2 < dx1) {\n                            targetPos = w;\n                        }\n                    }\n                }\n\n            }\n\n        }\n        this.setTarget(target);\n        printBattleMsg(pTag.battle, pBattleAction.select, { npc: this, target: target });\n        // console.log(this.printName + \" 选择了目标： \" + target.printName);\n        if (targetPos) {\n            this.moveTo(targetPos);\n        }\n    }\n\n    moveTo(targetPos: { x: number, y: number }) {\n        let chessTable = g_AutoBattleManager.chessTable;\n        if (chessTable[targetPos.x][targetPos.y]) {\n            printDefault(\"移动失败\");\n            return false;\n        }\n        chessTable[targetPos.x][targetPos.y] = this;\n        chessTable[this.posX][this.posY] = null;\n        let dt = g_Util.getDistance(this.posX, this.posY, targetPos.x, targetPos.y);\n        this._lockTime = dt * this.mvSpeed;\n        let dirX = targetPos.x - this.posX;\n        let dirY = targetPos.y - this.posY;\n        this.dir = g_Util.getDir(dirX, dirY);\n        this.posX = targetPos.x;\n        this.posY = targetPos.y;\n        printBattleMsg(pTag.battle, pBattleAction.move, { npc: this, pos: this._pos });\n        this._lockTime = this._lockTime + 500;\n    }\n\n    attack() {\n        if (this._lockTime > 0) {\n            return;\n        }\n        if (this.hasBuffState(BuffAndDotState.coma)) {\n            printBattleMsg(pTag.battle, pBattleAction.coma, { npc: this });\n            return;\n        }\n        printBattleMsg(pTag.battle, pBattleAction.tryAttack, { npc: this });\n\n        let curSkill = this.getCurSkill();\n        if (!curSkill) {\n            return\n        }\n\n        curSkill.play(this, this.curTarget);\n    }\n\n    playSkill(skillId: number) {\n\n    }\n\n    die() {\n        this._isDead = true;\n        for (const thisId in this.hitArrThisId) {\n            let npc = g_AutoBattleManager.getChessNpcByThisId(Number(thisId));\n            if (npc && npc.curTarget == this) {\n                if (npc.hasBuffState(BuffAndDotState.beSneer)) {\n                    npc.removeBuffState(BuffAndDotState.beSneer);\n                }\n                npc.curTarget = null;\n            }\n        }\n        let boom = this.getAttrChange(\"boom\");\n        if (boom && boom.length > 0) {\n            let boomInfo = boom[0].info;\n            let dpsInfo = g_AutoBattleManager.getDpsInfo(this.thisId);\n            let damage = 0;\n            if (dpsInfo) {\n                damage = boomInfo.damagePer * dpsInfo.dps / 100;\n            }\n            let effInfo = new EffectInfo();\n            effInfo.init(SkillEffectEnum.damage, [damage, DamageType.normal]);\n            let hitNpcList = g_AutoBattleManager.getEnemyList(this);\n            for (let i = 0; i < hitNpcList.length; i++) {\n                const defender = hitNpcList[i];\n                let effData = new EffData(effInfo, this, defender);\n                skillEffects[SkillEffectEnum.damage].play(effData);\n                defender.addBuff(new ChessBuff(boomInfo.comaTime, 0, defender, null, BuffAndDotState.coma));\n            }\n        }\n    }\n\n    /**\n     * 初始化技能\n     */\n    initSkillList() {\n        this._skillList = new Array();\n        let normalSkill = new NormalSkill(this.normalSkillId, this);\n        this._skillList.push(normalSkill);\n        let skill = new ChessSkill(this.skillId, this.level);\n        if (skill.isActive) {\n            this._skillList.push(skill);\n        } else {\n            skill.play(this);\n        }\n\n    }\n\n    /**\n     * 选择一个当前可用的技能\n     */\n    getCurSkill(): ChessSkill {\n        let curSkill = null;\n        for (let i = 0; i < this._skillList.length; i++) {\n            const skill = this._skillList[i];\n            if (skill.id == this.normalSkillId &&\n                (this.hasBuffState(BuffAndDotState.beDisarm) ||\n                    this.hasBuffState(BuffAndDotState.beBanish))) {\n                continue\n            }\n            if ((this.hasBuffState(BuffAndDotState.beSneer) || this.hasBuffState(BuffAndDotState.silent))\n                && skill.id == this.skillId) {\n                continue\n            }\n            if (skill.curCdTime == 0 && this.mp >= skill.mpCost) {\n                if (!curSkill) {\n                    curSkill = skill;\n                } else if (skill.mpCost > curSkill.mpCost) {\n                    curSkill = skill;\n                }\n            }\n        }\n        return curSkill\n    }\n\n    addAttrChange(attrName: string, info: AttrChangeInfo) {\n        if (!this._attrChangeMap[attrName]) {\n            this._attrChangeMap[attrName] = new Array();\n        }\n        let infoArr: Array<AttrChangeInfo> = this._attrChangeMap[attrName];\n        infoArr.push(info);\n        info.idx = infoArr.length - 1;\n    }\n\n    removeAttrChange(attrName: string, idx: number) {\n        let infoArr: Array<AttrChangeInfo> = this._attrChangeMap[attrName]\n        if (infoArr && infoArr[idx]) {\n            for (let i = idx + 1; i < infoArr.length; i++) {\n                const element = infoArr[i];\n                element.idx = element.idx - 1;\n            }\n            infoArr.splice(idx, 1);\n        }\n    }\n\n    getAttrChange(attrName: string): Array<AttrChangeInfo> {\n        return this._attrChangeMap[attrName];\n    }\n\n\n    // addShieldState(shield: ChessShield) {\n    //     if (!this._attrShieldMap[shield.name]) {\n    //         this._attrShieldMap[shield.name] = new Array();\n    //     }\n    //     let infoArr: Array<ChessShield> = this._attrShieldMap[shield.name];\n    //     infoArr.push(shield);\n    //     shield.idx = infoArr.length - 1;\n    // }\n\n    // removeShieldState(attrName: string, idx: number) {\n    //     let infoArr: Array<AttrChangeInfo> = this._attrShieldMap[attrName]\n    //     if (infoArr && infoArr[idx]) {\n    //         for (let i = idx + 1; i < infoArr.length; i++) {\n    //             const element = infoArr[i];\n    //             element.idx = element.idx - 1;\n    //         }\n    //         infoArr.splice(idx, 1);\n    //     }\n    // }\n\n    // getShieldState(attrName: string): Array<AttrChangeInfo> {\n    //     return this._attrShieldMap[attrName];\n    // }\n\n    addBuffState(state: BuffAndDotState) {\n        this._buffStateArr[state] = true;\n    }\n\n    removeBuffState(state: BuffAndDotState) {\n        this._buffStateArr[state] = false;\n    }\n\n    hasBuffState(state: BuffAndDotState) {\n        let ret = this._buffStateArr[state];\n        if (ret == null) {\n            ret = false;\n        }\n        return ret\n    }\n\n    public setTarget(target: ChessNpc) {\n        if (this.curTarget) {\n            this.curTarget.hitArrThisId[this.thisId] = null;\n        }\n        this.curTarget = target;\n        if (target) {\n            target.hitArrThisId[this.thisId] = 1;\n            this.curTargetThisId = target.thisId;\n        } else {\n            this.curTargetThisId = null;\n        }\n    }\n\n    public setPosition(x: number, y: number) {\n        this._pos.x = x;\n        this._pos.y = y;\n    }\n\n    public getPosition() {\n        return this._pos;\n    }\n\n    public get isDead(): boolean {\n        return this._isDead;\n    }\n\n    public set posX(v: number) {\n        this._pos.x = v;\n    }\n\n    public get posX(): number {\n        return this._pos.x;\n    }\n\n    public set posY(v: number) {\n        this._pos.y = v;\n    }\n\n    public get posY(): number {\n        return this._pos.y;\n    }\n\n    public get isTeamA(): boolean {\n        return this.teamA;\n    }\n\n    public set hp(v: number) {\n        this._hp = v;\n    }\n\n    /**\n     * 基础hp+buff增减hp\n     */\n    public get hp(): number {\n        let value = this._hp;\n        let attrChange = this.getAttrChange('maxHp');\n        if (attrChange && attrChange.length > 0) {\n            for (let i = 0; i < attrChange.length; i++) {\n                const info = attrChange[i];\n                value = value + info.info;\n            }\n        }\n        return value;\n    }\n\n    /**\n     * 基础hp\n     */\n    public getHp(): number {\n        return this._hp;\n    }\n\n    reduceHp(hp: number) {\n        this._hp = this._hp - hp;\n        if (this._hp > this.baseHp) {\n            this._hp = this.baseHp;\n        }\n    }\n\n    public set maxHp(v: number) {\n        this._maxHp = v;\n    }\n\n    public get maxHp(): number {\n        let value = this._maxHp;\n        let attrChange = this.getAttrChange('maxHp');\n        if (attrChange && attrChange.length > 0) {\n            for (let i = 0; i < attrChange.length; i++) {\n                const info = attrChange[i];\n                value = value + info.info;\n            }\n        }\n        return value;\n    }\n\n    public set mp(v: number) {\n        if (v > 100) {\n            v = 100;\n        }\n        this._mp = v;\n    }\n\n    public get mp(): number {\n        return this._mp;\n    }\n\n    public set maxMp(v: number) {\n        this._maxMp = v;\n    }\n\n    public get maxMp(): number {\n        return this._maxMp;\n    }\n\n    public set damage(v: number) {\n        this._damage = v;\n    }\n\n    public get damage(): number {\n        let value = this._damage;\n        let attrChange = this.getAttrChange(\"damage\")\n        if (attrChange && attrChange.length > 0) {\n            for (let i = 0; i < attrChange.length; i++) {\n                const info = attrChange[i];\n                value = value + info.info;\n            }\n        }\n        return value;\n    }\n\n    public set defence(v: number) {\n        this._defence = v;\n    }\n\n    public get defence(): number {\n        let value = this._defence;\n        let attrChange = this.getAttrChange(\"defence\")\n        if (attrChange && attrChange.length > 0) {\n            for (let i = 0; i < attrChange.length; i++) {\n                const info = attrChange[i];\n                value = value + info.info;\n            }\n        }\n        return value;\n    }\n\n    public set mDefence(v: number) {\n        this._mDefence = v;\n    }\n\n    public get mDefence(): number {\n        let value = (100 - this._mDefence) / 100.0;\n        let attrChange = this.getAttrChange(\"mDefence\")\n        if (attrChange && attrChange.length > 0) {\n            for (let i = 0; i < attrChange.length; i++) {\n                const info = attrChange[i];\n                value = value * (100 - info.info) / 100.0;\n            }\n        }\n\n        let warFever = this.getAttrChange(\"warFever\");\n        if (warFever && warFever.length > 0) {\n            let info = warFever[0].info;\n            let hpPercent = Math.floor((this.hp / this.maxHp) * 100);\n            let per = info.mDefence * (100 - hpPercent);\n            value = value * (100 - per) / 100.0;\n        }\n        value = Math.floor(100 - value * 100);\n\n        return value;\n    }\n\n    public set attSpeed(v: number) {\n        this._attSpeed = v;\n    }\n\n    public get attSpeed(): number {\n        let value = this._attSpeed;\n        let attrChange = this.getAttrChange(\"attackSpeed\")\n        if (attrChange && attrChange.length > 0) {\n            for (let i = 0; i < attrChange.length; i++) {\n                const info = attrChange[i];\n                value = value + info.info;\n            }\n        }\n\n        let warFever = this.getAttrChange(\"warFever\");\n        if (warFever && warFever.length > 0) {\n            let info = warFever[0].info;\n            let hpPercent = Math.floor((this.hp / this.maxHp) * 100);\n            value = value + info.attackSpeed * (100 - hpPercent);\n        }\n        return value;\n    }\n\n    public set attRange(v: number) {\n        this._attRange = v;\n    }\n\n    public get attRange(): number {\n        return this._attRange;\n    }\n\n    public set speed(v: number) {\n        this._speed = v;\n    }\n\n    public get speed(): number {\n        return this._speed;\n    }\n\n    public set mvSpeed(v: number) {\n        this._mvSpeed = v;\n    }\n\n    public get mvSpeed(): number {\n        return this._mvSpeed;\n    }\n\n    public set level(v: number) {\n        this._level = v;\n    }\n\n    public get level(): number {\n        return this._level;\n    }\n\n    public get name(): string {\n        return this.baseData.name;\n    }\n\n    public get baseHp(): number {\n        return this.baseData.hp * Math.pow(2, this.level - 1);\n    }\n\n    public get baseMp(): number {\n        return this.baseData.mp;\n    }\n\n    public get baseDamage(): number {\n        return this.baseData.damage * Math.pow(2, this.level - 1);\n    }\n\n    public get baseDefence(): number {\n        return this.baseData.defence;\n    }\n\n    public get baseMDefence(): number {\n        return this.baseData.mdefence;\n    }\n\n    public get baseAttSpeed(): number {\n        return this.baseData.attaSpeed;\n    }\n\n    public get baseAttRange(): number {\n        return this.baseData.attackRange;\n    }\n\n    public get baseSpeed(): number {\n        return this.baseData.speed;\n    }\n\n    public get baseMvSpeed(): number {\n        return this.baseData.mvSpeed;\n    }\n\n    public get race(): number {\n        return this.baseData.race;\n    }\n\n    public get career(): number {\n        return this.baseData.career;\n    }\n\n    public get moveStep(): number {\n        return this.baseData.mvStep;\n    }\n\n    public get normalSkillId(): number {\n        return this.baseData.normalSkill;\n    }\n\n    public get skillId(): number {\n        return this.baseData.skill;\n    }\n\n\n\n    public get printName(): string {\n        let str = this.isTeamA ? \"A:\" : \"B:\"\n        str = str + this.name + \"(\" + this.hp + \",\" + this.mp + \")\";\n        return str;\n    }\n\n    isSameTeam(npc: ChessNpc): boolean {\n        return this.isTeamA == npc.isTeamA;\n    }\n}\n\nexport class ChessPet extends ChessNpc {\n    readonly masterId: number;\n    constructor(thisId: number, baseId: number, level: number, isTeamA: boolean, masterId: number) {\n        super(thisId, baseId, level, isTeamA);\n        this.masterId = masterId;\n    }\n}"]}