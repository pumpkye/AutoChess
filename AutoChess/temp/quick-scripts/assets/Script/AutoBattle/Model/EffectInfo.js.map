{"version":3,"sources":["EffectInfo.ts"],"names":[],"mappings":";;;;;AAKA;;GAEG;AACH;IAGI;QAFQ,WAAM,GAAG,CAAC,CAAC;IAEH,CAAC;IAEjB;;;OAGG;IACH,8BAAS,GAAT,UAAU,MAAc;QACpB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACxB;IACL,CAAC;IACD;;;;OAIG;IACH,yBAAI,GAAJ,UAAK,KAAsB,EAAE,MAAsB;QAC/C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAID,sBAAW,6BAAK;QAHhB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAKD,sBAAW,8BAAM;aAIjB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QATD;;WAEG;aACH,UAAkB,CAAgB;YAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC;;;OAAA;IAKL,iBAAC;AAAD,CA5CA,AA4CC,IAAA;AA5CY,gCAAU;AA8CvB;;GAEG;AACH;IAMI,iBAAY,QAAoB,EAAE,QAAmB,EAAE,QAAmB;QAF1E,SAAI,GAAG,CAAC,CAAC;QACT,WAAM,GAAG,CAAC,CAAC;QAEP,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,cAAC;AAAD,CAXA,AAWC,IAAA;AAXY,0BAAO","file":"","sourceRoot":"../../../../../../assets/Script/AutoBattle/Model","sourcesContent":["import { g_Util } from \"../Util\";\nimport { ChessNpc } from \"./ChessNpc\";\nimport { printDefault } from \"../OutPut/Printer\";\nimport { SkillEffectEnum } from \"../SkillEffect/SkillEffectEnum\";\n\n/**\n * 技能的效果字段\n */\nexport class EffectInfo {\n    private _effId = 0;\n    private _effArr: Array<number>;\n    constructor() { }\n\n    /**\n     * 使用效果字符串初始化\n     * @param effStr 效果字段\n     */\n    initByStr(effStr: string) {\n        let strs = effStr.split(\",\");\n        this._effId = Number(strs[0]);\n        this._effArr = new Array();\n        for (let i = 1; i < strs.length; i++) {\n            const e = Number(strs[i]);\n            this._effArr.push(e);\n        }\n    }\n    /**\n     * 使用具体参数初始化\n     * @param effId \n     * @param effArr \n     */\n    init(effId: SkillEffectEnum, effArr?: Array<number>) {\n        this._effId = effId;\n        this.effArr = effArr;\n    }\n    /**\n     * 技能效果Id\n     */\n    public get effId(): number {\n        return this._effId;\n    }\n\n    /**\n     * 效果字段\n     */\n    public set effArr(v: Array<number>) {\n        this._effArr = v;\n    }\n\n    public get effArr(): Array<number> {\n        return this._effArr;\n    }\n}\n\n/**\n * 为skillEffect提供输入,包含effectInfo和attacker\n */\nexport class EffData {\n    attacker: ChessNpc;\n    defender: ChessNpc;\n    skillEff: EffectInfo;\n    race = 0;\n    career = 0;\n    constructor(skillEff: EffectInfo, attacker?: ChessNpc, defender?: ChessNpc) {\n        this.skillEff = skillEff;\n        this.attacker = attacker;\n        this.defender = defender;\n    }\n}"]}