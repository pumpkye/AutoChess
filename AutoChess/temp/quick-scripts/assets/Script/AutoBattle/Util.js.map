{"version":3,"sources":["Util.ts"],"names":[],"mappings":";;;;;AACA,8DAAyE;AAEzE;;GAEG;AACH;IACI;IAEA,CAAC;IAED;;;;OAIG;IACH,4BAAa,GAAb,UAAc,IAAY,EAAE,EAAU;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,yBAAU,GAAV,UAAW,IAAY;IAEvB,CAAC;IAED,qBAAM,GAAN,UAAO,IAAY,EAAE,IAAY;QAC7B,IAAI,IAAI,IAAI,CAAC,EAAE;YACX,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5C;QACD,IAAI,IAAI,IAAI,CAAC,EAAE;YACX,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5C;QACD,IAAI,GAAG,GAAG,CAAC,CAAA;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,4BAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,4BAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1C,GAAG,GAAG,CAAC,CAAC;gBACR,MAAM;aACT;SACJ;QACD,OAAO,GAAG,CAAA;IACd,CAAC;IAED,0BAAW,GAAX,UAAY,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAID,8BAAe,GAAf,UAAgB,IAAuB,EAAE,IAAuB,EAAE,IAAa,EAAE,IAAa;QAC1F,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YACtD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SACxD;aAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC7D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5E;IACL,CAAC;IAED,mCAAoB,GAApB,UAAqB,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,KAAa,EAAE,MAAc;QAC3F,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QACjC,IAAI,EAAE,GAAG,MAAM,EAAE;YACb,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QACjC,IAAI,oCAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,oCAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;YACjE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,WAAC;AAAD,CAhEA,AAgEC,IAAA;AAEU,QAAA,MAAM,GAAG,IAAI,IAAI,EAAE,CAAA","file":"","sourceRoot":"../../../../../assets/Script/AutoBattle","sourcesContent":["import { ChessNpc } from \"./Model/ChessNpc\";\nimport { attackRangeConfig, dirConfig } from \"./Config/AutoBattleConfig\";\n\n/**\n * \n */\nclass Util {\n    constructor() {\n\n    }\n\n    /**\n     * 读取excell表数据\n     * @param name 表名\n     * @param id 主键id\n     */\n    getExcellData(name: string, id: number): any {\n        return null;\n    }\n\n    /**\n     * 读取xml配置\n     * @param name xml文件名\n     */\n    getXmlData(name: string): any {\n\n    }\n\n    getDir(dirX: number, dirY: number): number {\n        if (dirX != 0) {\n            dirX = Math.floor(dirX / Math.abs(dirX));\n        }\n        if (dirY != 0) {\n            dirY = Math.floor(dirY / Math.abs(dirY));\n        }\n        let dir = 0\n        for (let i = 0; i < 8; i++) {\n            if (dirConfig[i].x == dirX && dirConfig[i].y) {\n                dir = i;\n                break;\n            }\n        }\n        return dir\n    }\n\n    getDistance(x1: number, y1: number, x2: number, y2: number) {\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n    }\n\n    getCityDistance(pos1X: number, pos1Y: number, pos2X: number, pos2Y: number): number;\n    getCityDistance(npc1: ChessNpc, npc2: ChessNpc): number;\n    getCityDistance(arg1: ChessNpc | number, arg2: ChessNpc | number, arg3?: number, arg4?: number): number {\n        if (typeof arg1 === 'number' && typeof arg2 === 'number') {\n            return Math.abs(arg1 - arg3) + Math.abs(arg2 - arg4);\n        } else if (typeof arg1 === 'object' && typeof arg2 === 'object') {\n            return Math.abs(arg1.posX - arg2.posX) + Math.abs(arg1.posY - arg2.posY);\n        }\n    }\n\n    checkPosShortInRange(pos1X: number, pos1Y: number, pos2X: number, pos2Y: number, radius: number): boolean {\n        let dx = Math.abs(pos1X - pos2X);\n        if (dx > radius) {\n            return false;\n        }\n        let dy = Math.abs(pos1Y - pos2Y);\n        if (attackRangeConfig[radius] && dy > attackRangeConfig[radius][dx]) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport var g_Util = new Util()"]}