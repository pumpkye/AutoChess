{"version":3,"sources":["Layout.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Net","sourcesContent":["import { g_NetUtil } from \"./NetUtil\";\nimport { ChessNpcInfo } from \"../AutoBattle/Input/InputCache\";\n\nclass LayoutMessage {\n    protected url = '/layout';\n    constructor() {\n        this.url = g_NetUtil.formatUrl(this.url);\n    }\n\n    /**\n     * 拉取所有layout\n     */\n    async listAllLayout(): Promise<{\n        success: boolean,\n        layoutList: Array<{\n            id: number,\n            name: string\n        }>\n    }> {\n        let ret: any = await g_NetUtil.sendHttpRequest(this.url, \"GET\");\n        let res = {\n            success: ret.success,\n            layoutList: new Array<{ id: number, name: string }>(),\n        }\n        for (let i = 0; i < ret.ret.length; i++) {\n            const e = ret.ret[i];\n            res.layoutList.push({ id: e.id, name: e.name });\n        }\n        return res;\n    }\n\n    /**\n     * 通过Id拉取某个layout详情\n     */\n    async getLayout(id: number): Promise<{\n        success: boolean,\n        layout: {\n            id: number,\n            name: string,\n            npcList: Array<ChessNpcInfo>\n        }\n    }> {\n        let url = this.url + '/' + id;\n        let ret: any = await g_NetUtil.sendHttpRequest(url, \"GET\");\n        console.log(ret);\n        let res = {\n            success: ret.success,\n            layout: {\n                id: ret.ret.id,\n                name: ret.ret.name,\n                npcList: new Array(),\n            }\n        }\n        let layoutObj = JSON.parse(ret.ret.layout_str);\n        for (let i = 0; i < layoutObj.length; i++) {\n            const npc = layoutObj[i];\n            res.layout.npcList.push(new ChessNpcInfo(npc.thisId, npc.baseId, npc.level, { x: npc.pos.x, y: npc.pos.y }));\n\n        }\n        return res;\n    }\n\n    /**\n     * 保存layout\n     */\n    async saveLayout(name: string, npcList: Array<ChessNpcInfo>) {\n        let jsonObj = {\n            name: name,\n            layout: npcList,\n        }\n        let body = JSON.stringify(jsonObj);\n        let ret = await g_NetUtil.sendHttpRequest(this.url, \"POST\", body);\n        console.log(ret);\n        return ret;\n    }\n\n    /**\n     * 删除layout\n     * @param id \n     */\n    async deleteLayout(id: number) {\n        let url = this.url + '/' + id;\n        return await g_NetUtil.sendHttpRequest(url, \"DELETE\");\n    }\n\n}\n\nexport const g_layoutMessage = new LayoutMessage();"]}