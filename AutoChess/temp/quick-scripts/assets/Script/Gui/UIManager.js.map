{"version":3,"sources":["UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Gui","sourcesContent":["import { GameConfig } from \"../GameConfig\";\n\nvar uiPrefabConfig = {\n    // UiOperation: { name: \"UIOperation\", zIndex: 0 },\n    UIChessTable: { name: \"UIChessTable\", createAfterLoad: true, zIndex: 0 },\n    UIMain: { name: \"UIMain\", createAfterLoad: true, zIndex: 1 },\n    UISetNpc: { name: \"UISetNpc\" },\n    UISaveLayout: { name: \"UISaveLayout\" },\n    UILoadLayoutItem: { name: \"UILoadLayoutItem\" },\n    UILoadLayout: { name: \"UILoadLayout\" },\n    // UiReliveIntroduction : {\n    //     nameInExam : \"UiReliveIntroduction\",\n    //     namePassExam : \"UiReliveIntroductionPE\",\n    //     // name : \"UiReliveIntroduction\",\n    //     zIndex:0\n    // }, //根据审核状态加载不同的prefab, nameInExam 表示在审核中, namePassExam 表示审核已通过\n\n}\n\nclass UIManager {\n    node: cc.Node = null;\n    constructor() {\n\n    }\n    init() {\n        this.node = cc.find('Canvas/Gui');\n        this.loadPrefabRes();\n    }\n\n    /**\n     * 预加载所有的UIPrefab\n     * uiPrefabConfig包含了需要加载的prefab和该prefab的加载状态。资源的加载是异步的，通过回调函数设置prefab的加载状态，只有加载完成的prefab才可以被创建。\n     * \n     */\n    loadPrefabRes() {\n        for (const k in uiPrefabConfig) {\n            if (uiPrefabConfig.hasOwnProperty(k)) {\n                const e = uiPrefabConfig[k]\n                e.prefab = null\n                e.panel = null\n                if (e.name != null) {\n                    cc.loader.loadRes(\"UIPrefab/\" + e.name, cc.Prefab, function (err, prefab) {\n                        g_UIManager.setPrefab(prefab)\n                    })\n                }\n            }\n        }\n        this.loadPrefabResByExamine();\n    }\n\n    /**\n     *   根据当前审核状态加载不同的资源\n     */\n    loadPrefabResByExamine() {\n        for (const key in uiPrefabConfig) {\n            if (uiPrefabConfig.hasOwnProperty(key)) {\n                const e = uiPrefabConfig[key];\n                if (e.nameInExam || e.namePassExam) {\n                    if (e.prefab) {\n                        // 若当前prefab与审核状态不一致则卸载该资源\n                        if (GameConfig.isExamine && e.prefab.name != e.nameInExam) {\n                            cc.loader.releaseRes(\"UIPrefab/\" + e.prefab.name, cc.Prefab)\n                            e.prefab = null\n                        } else if (!GameConfig.isExamine && e.prefab.name != e.namePassExam) {\n                            cc.loader.releaseRes(\"UIPrefab/\" + e.prefab.name, cc.Prefab)\n                            e.prefab = null\n                        }\n                    }\n                    if (e.prefab == null) {\n                        if (GameConfig.isExamine && e.nameInExam) {\n                            cc.loader.loadRes(\"UIPrefab/\" + e.nameInExam, cc.Prefab, function (err, prefab: cc.Prefab) {\n\n                                g_UIManager.setPrefab(prefab)\n                            })\n                        } else if (!GameConfig.isExamine && e.namePassExam) {\n                            cc.loader.loadRes(\"UIPrefab/\" + e.namePassExam, cc.Prefab, function (err, prefab: cc.Prefab) {\n                                g_UIManager.setPrefab(prefab)\n                            })\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param prefab 通过loadRes加载的prefab\n     */\n    setPrefab(prefab: cc.Prefab) {\n        let ret = false\n        if (uiPrefabConfig != null) {\n            if (uiPrefabConfig.hasOwnProperty(prefab.name) && uiPrefabConfig[prefab.name].name == prefab.name) {\n                uiPrefabConfig[prefab.name].prefab = prefab\n                ret = true\n            } else {\n                for (const key in uiPrefabConfig) {\n                    if (uiPrefabConfig.hasOwnProperty(key)) {\n                        const e = uiPrefabConfig[key];\n                        if ((e.name != null && e.name == prefab.name)\n                            || (e.nameInExam != null && e.nameInExam == prefab.name)\n                            || (e.namePassExam != null && e.namePassExam == prefab.name)) {\n                            e.prefab = prefab\n                            ret = true\n                        }\n                    }\n                }\n            }\n        }\n        if (!ret) {\n            console.log(\"load prefab\", prefab.name, \"fail,can not find it in config\")\n        } else if (uiPrefabConfig[prefab.name].createAfterLoad) {\n            g_UIManager.getOrCreatePanel(prefab.name);\n        }\n        return ret\n    }\n\n    /**\n     * 根据prefab创建一个node，并将该node引用保存在uiPrefabConfig里\n     * @param {string} panelName 同uiPrefabConfig的key\n     * @returns {cc.Component} \n     */\n    getOrCreatePanel(panelName) {\n        console.log(\"getOrCreatePanel\", panelName)\n        if (uiPrefabConfig.hasOwnProperty(panelName)) {\n            if (uiPrefabConfig[panelName]) {\n                if (uiPrefabConfig[panelName].panel) {\n                    return uiPrefabConfig[panelName].panel\n                }\n                let panel = this.createPanelOnly(panelName)\n                if (panel) {\n                    uiPrefabConfig[panelName].panel = panel\n                    if (uiPrefabConfig[panelName].zIndex) {\n                        panel.node.zIndex = uiPrefabConfig[panelName].zIndex\n                    }\n                    panel.node.parent = this.node\n                }\n                return panel\n            }\n        } else {\n            console.log(\"创建panel失败，请检查uiPrefabConfig里是否包含该项配置\")\n        }\n    }\n\n    /**\n     * 根据prefab创建一个node，并且不保存该node的引用\n     * @param {string} panelName\n     * @return {cc.Component} 与prefab名称相同uiComponet对象\n     */\n    createPanelOnly(panelName) {\n        if (uiPrefabConfig.hasOwnProperty(panelName)) {\n            if (uiPrefabConfig[panelName].prefab) {\n                let panelNode = cc.instantiate(uiPrefabConfig[panelName].prefab)\n                if (panelNode != null) {\n                    let panel = panelNode.getComponent(uiPrefabConfig[panelName].prefab.name)\n                    return panel\n                }\n            } else {\n                console.log(\"创建panel失败，该panel的prefab未加载\")\n            }\n        } else {\n            console.log(\"创建panel失败，请检查uiPrefabConfig里是否包含该项配置\")\n        }\n    }\n\n    /**\n     * 获取一个panel\n     * @param {string} panelName \n     * @returns {cc.Component} \n     */\n    getPanel(panelName) {\n        if (uiPrefabConfig.hasOwnProperty(panelName)) {\n            return uiPrefabConfig[panelName].panel\n        }\n\n        // if (panelName == \"UIHome\") {\n        //     return this.uiHome\n        // }\n        return null\n    }\n\n    closePanel(panelName: string);\n    closePanel(panel: cc.Component);\n    /**\n     * 关闭一个panel\n     * @param {string} panelName \n     */\n    closePanel(arg1: string | cc.Component) {\n        let panelName = \"\";\n        if (typeof (arg1) === \"string\") {\n            panelName = arg1;\n        } else {\n            panelName = arg1.node.name;\n        }\n        if (uiPrefabConfig.hasOwnProperty(panelName) && uiPrefabConfig[panelName].panel) {\n            uiPrefabConfig[panelName].panel.node.destroy()\n            uiPrefabConfig[panelName].panel = null\n        }\n\n    }\n\n    /**\n    * 显示一个panel，如果这个panel未创建则创建这个panel\n    * @param {string} panelName 同uiPrefabConfig的key\n    * @returns {cc.Component} panel \n    */\n    showPanel(panelName) {\n        // if (panelName == \"UIHome\") {\n        //     this.uiHome.node.active = true\n        //     return this.uiHome\n        // }\n        let panel = this.getOrCreatePanel(panelName)\n        if (panel) {\n            panel.node.active = true\n            return panel\n        }\n    }\n\n    /**\n     * 隐藏一个panel\n     * @param {cc.Component} panel 需要隐藏的panel component\n     */\n    hidePanel(panel) {\n        // if (panel == this.uiHome) {\n        //     this.uiHome.node.active = false\n        //     return this.uiHome\n        // }\n        if (panel != null && panel.node != null) {\n            panel.node.active = false\n            return panel\n        }\n    }\n}\n\nexport var g_UIManager = new UIManager();"]}